"use strict";
// NOTE: THIS IS MACHINE GENERATED. CHANGES WILL BE OVERWRITTEN!
Object.defineProperty(exports, "__esModule", { value: true });
class ServiceNames {
}
exports.ServiceNames = ServiceNames;
ServiceNames.AWS_ACCOUNTS = "AWS Accounts";
ServiceNames.ALEXA_FOR_BUSINESS = "Alexa for Business";
ServiceNames.AWS_AMPLIFY = "AWS Amplify";
ServiceNames.AMAZON_API_GATEWAY = "Amazon API Gateway";
ServiceNames.AWS_APP_MESH = "AWS App Mesh";
ServiceNames.AWS_APP_MESH_PREVIEW = "AWS App Mesh Preview";
ServiceNames.APPLICATION_AUTO_SCALING = "Application Auto Scaling";
ServiceNames.APPLICATION_DISCOVERY = "Application Discovery";
ServiceNames.APPLICATION_DISCOVERY_ARSENAL = "Application Discovery Arsenal";
ServiceNames.AMAZON_APP_STREAM_2_0 = "Amazon AppStream 2.0";
ServiceNames.AWS_APP_SYNC = "AWS AppSync";
ServiceNames.AWS_ARTIFACT = "AWS Artifact";
ServiceNames.AMAZON_ATHENA = "Amazon Athena";
ServiceNames.AWS_AUTO_SCALING = "AWS Auto Scaling";
ServiceNames.AWS_BACKUP = "AWS Backup";
ServiceNames.AWS_BACKUP_STORAGE = "AWS Backup storage";
ServiceNames.AWS_BATCH = "AWS Batch";
ServiceNames.AWS_BILLING = "AWS Billing";
ServiceNames.AWS_BUDGET_SERVICE = "AWS Budget Service";
ServiceNames.AWS_CERTIFICATE_MANAGER = "AWS Certificate Manager";
ServiceNames.AWS_CERTIFICATE_MANAGER_PRIVATE_CERTIFICATE_AUTHORITY = "AWS Certificate Manager Private Certificate Authority";
ServiceNames.AWS_CHATBOT = "AWS Chatbot";
ServiceNames.AMAZON_CHIME = "Amazon Chime";
ServiceNames.AMAZON_CLOUD_DIRECTORY = "Amazon Cloud Directory";
ServiceNames.AWS_CLOUD_MAP = "AWS Cloud Map";
ServiceNames.AWS_CLOUD_9 = "AWS Cloud9";
ServiceNames.AWS_CLOUD_FORMATION = "AWS CloudFormation";
ServiceNames.AMAZON_CLOUD_FRONT = "Amazon CloudFront";
ServiceNames.AWS_CLOUD_HSM = "AWS CloudHSM";
ServiceNames.AMAZON_CLOUD_SEARCH = "Amazon CloudSearch";
ServiceNames.AWS_CLOUD_TRAIL = "AWS CloudTrail";
ServiceNames.AMAZON_CLOUD_WATCH = "Amazon CloudWatch";
ServiceNames.CLOUD_WATCH_APPLICATION_INSIGHTS = "CloudWatch Application Insights";
ServiceNames.AMAZON_CLOUD_WATCH_LOGS = "Amazon CloudWatch Logs";
ServiceNames.AMAZON_CLOUD_WATCH_SYNTHETICS = "Amazon CloudWatch Synthetics";
ServiceNames.AWS_CODE_SIGNING_FOR_AMAZON_FREE_RTOS = "AWS Code Signing for Amazon FreeRTOS";
ServiceNames.AWS_CODE_BUILD = "AWS CodeBuild";
ServiceNames.AWS_CODE_COMMIT = "AWS CodeCommit";
ServiceNames.AWS_CODE_DEPLOY = "AWS CodeDeploy";
ServiceNames.AWS_CODE_PIPELINE = "AWS CodePipeline";
ServiceNames.AWS_CODE_STAR = "AWS CodeStar";
ServiceNames.AWS_CODE_STAR_NOTIFICATIONS = "AWS CodeStar Notifications";
ServiceNames.AMAZON_COGNITO_IDENTITY = "Amazon Cognito Identity";
ServiceNames.AMAZON_COGNITO_SYNC = "Amazon Cognito Sync";
ServiceNames.AMAZON_COGNITO_USER_POOLS = "Amazon Cognito User Pools";
ServiceNames.AMAZON_COMPREHEND = "Amazon Comprehend";
ServiceNames.COMPREHEND_MEDICAL = "Comprehend Medical";
ServiceNames.COMPUTE_OPTIMIZER = "Compute Optimizer";
ServiceNames.AWS_CONFIG = "AWS Config";
ServiceNames.AMAZON_CONNECT = "Amazon Connect";
ServiceNames.AWS_COST_AND_USAGE_REPORT = "AWS Cost and Usage Report";
ServiceNames.AWS_COST_EXPLORER_SERVICE = "AWS Cost Explorer Service";
ServiceNames.AWS_DATA_EXCHANGE = "AWS Data Exchange";
ServiceNames.AMAZON_DATA_LIFECYCLE_MANAGER = "Amazon Data Lifecycle Manager";
ServiceNames.DATA_PIPELINE = "Data Pipeline";
ServiceNames.AWS_DATABASE_MIGRATION_SERVICE = "AWS Database Migration Service";
ServiceNames.DATABASE_QUERY_METADATA_SERVICE = "Database Query Metadata Service";
ServiceNames.DATA_SYNC = "DataSync";
ServiceNames.AWS_DEEP_LENS = "AWS DeepLens";
ServiceNames.AWS_DEEP_RACER = "AWS DeepRacer";
ServiceNames.AMAZON_DETECTIVE = "Amazon Detective";
ServiceNames.AWS_DEVICE_FARM = "AWS Device Farm";
ServiceNames.AWS_DIRECT_CONNECT = "AWS Direct Connect";
ServiceNames.AWS_DIRECTORY_SERVICE = "AWS Directory Service";
ServiceNames.AMAZON_DYNAMO_DB = "Amazon DynamoDB";
ServiceNames.AMAZON_DYNAMO_DB_ACCELERATOR_DAX = "Amazon DynamoDB Accelerator (DAX)";
ServiceNames.AMAZON_EC2 = "Amazon EC2";
ServiceNames.AMAZON_EC2_AUTO_SCALING = "Amazon EC2 Auto Scaling";
ServiceNames.AMAZON_EC2_IMAGE_BUILDER = "Amazon EC2 Image Builder";
ServiceNames.AMAZON_EC2_INSTANCE_CONNECT = "Amazon EC2 Instance Connect";
ServiceNames.AWS_ELASTIC_BEANSTALK = "AWS Elastic Beanstalk";
ServiceNames.AMAZON_ELASTIC_BLOCK_STORE = "Amazon Elastic Block Store";
ServiceNames.AMAZON_ELASTIC_CONTAINER_REGISTRY = "Amazon Elastic Container Registry";
ServiceNames.AMAZON_ELASTIC_CONTAINER_SERVICE = "Amazon Elastic Container Service";
ServiceNames.AMAZON_ELASTIC_CONTAINER_SERVICE_FOR_KUBERNETES = "Amazon Elastic Container Service for Kubernetes";
ServiceNames.AMAZON_ELASTIC_FILE_SYSTEM = "Amazon Elastic File System";
ServiceNames.AMAZON_ELASTIC_INFERENCE = "Amazon Elastic Inference";
ServiceNames.ELASTIC_LOAD_BALANCING = "Elastic Load Balancing";
ServiceNames.ELASTIC_LOAD_BALANCING_V2 = "Elastic Load Balancing V2";
ServiceNames.AMAZON_ELASTIC_MAP_REDUCE = "Amazon Elastic MapReduce";
ServiceNames.AMAZON_ELASTIC_TRANSCODER = "Amazon Elastic Transcoder";
ServiceNames.AMAZON_ELASTI_CACHE = "Amazon ElastiCache";
ServiceNames.AMAZON_ELASTICSEARCH_SERVICE = "Amazon Elasticsearch Service";
ServiceNames.AWS_ELEMENTAL_MEDIA_CONNECT = "AWS Elemental MediaConnect";
ServiceNames.AWS_ELEMENTAL_MEDIA_CONVERT = "AWS Elemental MediaConvert";
ServiceNames.AWS_ELEMENTAL_MEDIA_LIVE = "AWS Elemental MediaLive";
ServiceNames.AWS_ELEMENTAL_MEDIA_PACKAGE = "AWS Elemental MediaPackage";
ServiceNames.AWS_ELEMENTAL_MEDIA_PACKAGE_VOD = "AWS Elemental MediaPackage VOD";
ServiceNames.AWS_ELEMENTAL_MEDIA_STORE = "AWS Elemental MediaStore";
ServiceNames.AWS_ELEMENTAL_MEDIA_TAILOR = "AWS Elemental MediaTailor";
ServiceNames.AMAZON_EVENT_BRIDGE = "Amazon EventBridge";
ServiceNames.AMAZON_EVENT_BRIDGE_SCHEMAS = "Amazon EventBridge Schemas";
ServiceNames.AWS_FIREWALL_MANAGER = "AWS Firewall Manager";
ServiceNames.AMAZON_FORECAST = "Amazon Forecast";
ServiceNames.AMAZON_FRAUD_DETECTOR = "Amazon Fraud Detector";
ServiceNames.AMAZON_FREE_RTOS = "Amazon FreeRTOS";
ServiceNames.AMAZON_FSX = "Amazon FSx";
ServiceNames.AMAZON_GAME_LIFT = "Amazon GameLift";
ServiceNames.AMAZON_GLACIER = "Amazon Glacier";
ServiceNames.AWS_GLOBAL_ACCELERATOR = "AWS Global Accelerator";
ServiceNames.AWS_GLUE = "AWS Glue";
ServiceNames.AWS_GROUND_STATION = "AWS Ground Station";
ServiceNames.AMAZON_GROUND_TRUTH_LABELING = "Amazon GroundTruth Labeling";
ServiceNames.AMAZON_GUARD_DUTY = "Amazon GuardDuty";
ServiceNames.AWS_HEALTH_APIS_AND_NOTIFICATIONS = "AWS Health APIs and Notifications";
ServiceNames.IAM_ACCESS_ANALYZER = "IAM Access Analyzer";
ServiceNames.IDENTITY_AND_ACCESS_MANAGEMENT = "Identity And Access Management";
ServiceNames.AWS_IMPORT_EXPORT_DISK_SERVICE = "AWS Import Export Disk Service";
ServiceNames.AMAZON_INSPECTOR = "Amazon Inspector";
ServiceNames.AWS_IOT = "AWS IoT";
ServiceNames.AWS_IOT_1_CLICK = "AWS IoT 1-Click";
ServiceNames.AWS_IOT_ANALYTICS = "AWS IoT Analytics";
ServiceNames.AWS_IOT_EVENTS = "AWS IoT Events";
ServiceNames.AWS_IOT_GREENGRASS = "AWS IoT Greengrass";
ServiceNames.AWS_IOT_SITE_WISE = "AWS IoT SiteWise";
ServiceNames.AWS_IOT_THINGS_GRAPH = "AWS IoT Things Graph";
ServiceNames.AWS_IQ = "AWS IQ";
ServiceNames.AWS_IQ_PERMISSIONS = "AWS IQ Permissions";
ServiceNames.AMAZON_KENDRA = "Amazon Kendra";
ServiceNames.AWS_KEY_MANAGEMENT_SERVICE = "AWS Key Management Service";
ServiceNames.AMAZON_KINESIS = "Amazon Kinesis";
ServiceNames.AMAZON_KINESIS_ANALYTICS = "Amazon Kinesis Analytics";
ServiceNames.AMAZON_KINESIS_ANALYTICS_V2 = "Amazon Kinesis Analytics V2";
ServiceNames.AMAZON_KINESIS_FIREHOSE = "Amazon Kinesis Firehose";
ServiceNames.AMAZON_KINESIS_VIDEO_STREAMS = "Amazon Kinesis Video Streams";
ServiceNames.AWS_LAKE_FORMATION = "AWS Lake Formation";
ServiceNames.AWS_LAMBDA = "AWS Lambda";
ServiceNames.LAUNCH_WIZARD = "Launch Wizard";
ServiceNames.AMAZON_LEX = "Amazon Lex";
ServiceNames.AWS_LICENSE_MANAGER = "AWS License Manager";
ServiceNames.AMAZON_LIGHTSAIL = "Amazon Lightsail";
ServiceNames.AMAZON_MACHINE_LEARNING = "Amazon Machine Learning";
ServiceNames.AMAZON_MACIE = "Amazon Macie";
ServiceNames.MANAGE_AMAZON_API_GATEWAY = "Manage Amazon API Gateway";
ServiceNames.AWS_MANAGED_APACHE_CASSANDRA_SERVICE = "AWS Managed Apache Cassandra Service";
ServiceNames.AMAZON_MANAGED_BLOCKCHAIN = "Amazon Managed Blockchain";
ServiceNames.AMAZON_MANAGED_STREAMING_FOR_KAFKA = "Amazon Managed Streaming for Kafka";
ServiceNames.AWS_MARKETPLACE = "AWS Marketplace";
ServiceNames.AWS_MARKETPLACE_CATALOG = "AWS Marketplace Catalog";
ServiceNames.AWS_MARKETPLACE_ENTITLEMENT_SERVICE = "AWS Marketplace Entitlement Service";
ServiceNames.AWS_MARKETPLACE_IMAGE_BUILDING_SERVICE = "AWS Marketplace Image Building Service";
ServiceNames.AWS_MARKETPLACE_MANAGEMENT_PORTAL = "AWS Marketplace Management Portal";
ServiceNames.AWS_MARKETPLACE_METERING_SERVICE = "AWS Marketplace Metering Service";
ServiceNames.AWS_MARKETPLACE_PROCUREMENT_SYSTEMS_INTEGRATION = "AWS Marketplace Procurement Systems Integration";
ServiceNames.AMAZON_MECHANICAL_TURK = "Amazon Mechanical Turk";
ServiceNames.AMAZON_MESSAGE_DELIVERY_SERVICE = "Amazon Message Delivery Service";
ServiceNames.AWS_MIGRATION_HUB = "AWS Migration Hub";
ServiceNames.AMAZON_MOBILE_ANALYTICS = "Amazon Mobile Analytics";
ServiceNames.AWS_MOBILE_HUB = "AWS Mobile Hub";
ServiceNames.AMAZON_MQ = "Amazon MQ";
ServiceNames.AMAZON_NEPTUNE = "Amazon Neptune";
ServiceNames.NETWORK_MANAGER = "Network Manager";
ServiceNames.AWS_OPS_WORKS = "AWS OpsWorks";
ServiceNames.AWS_OPS_WORKS_CONFIGURATION_MANAGEMENT = "AWS OpsWorks Configuration Management";
ServiceNames.AWS_ORGANIZATIONS = "AWS Organizations";
ServiceNames.AWS_OUTPOSTS = "AWS Outposts";
ServiceNames.AWS_PERFORMANCE_INSIGHTS = "AWS Performance Insights";
ServiceNames.AMAZON_PERSONALIZE = "Amazon Personalize";
ServiceNames.AMAZON_PINPOINT = "Amazon Pinpoint";
ServiceNames.AMAZON_PINPOINT_EMAIL_SERVICE = "Amazon Pinpoint Email Service";
ServiceNames.AMAZON_PINPOINT_SMS_AND_VOICE_SERVICE = "Amazon Pinpoint SMS and Voice Service";
ServiceNames.AMAZON_POLLY = "Amazon Polly";
ServiceNames.AWS_PRICE_LIST = "AWS Price List";
ServiceNames.AWS_PRIVATE_MARKETPLACE = "AWS Private Marketplace";
ServiceNames.AMAZON_QLDB = "Amazon QLDB";
ServiceNames.AMAZON_QUICK_SIGHT = "Amazon QuickSight";
ServiceNames.AMAZON_RDS = "Amazon RDS";
ServiceNames.AMAZON_RDS_DATA_API = "Amazon RDS Data API";
ServiceNames.AMAZON_RDS_IAM_AUTHENTICATION = "Amazon RDS IAM Authentication";
ServiceNames.AMAZON_REDSHIFT = "Amazon Redshift";
ServiceNames.AMAZON_REKOGNITION = "Amazon Rekognition";
ServiceNames.AWS_RESOURCE_ACCESS_MANAGER = "AWS Resource Access Manager";
ServiceNames.AMAZON_RESOURCE_GROUP_TAGGING_API = "Amazon Resource Group Tagging API";
ServiceNames.AWS_RESOURCE_GROUPS = "AWS Resource Groups";
ServiceNames.AWS_ROBO_MAKER = "AWS RoboMaker";
ServiceNames.AMAZON_ROUTE_53 = "Amazon Route 53";
ServiceNames.AMAZON_ROUTE_53_RESOLVER = "Amazon Route 53 Resolver";
ServiceNames.AMAZON_ROUTE_53_DOMAINS = "Amazon Route53 Domains";
ServiceNames.AMAZON_S3 = "Amazon S3";
ServiceNames.AMAZON_SAGE_MAKER = "Amazon SageMaker";
ServiceNames.AWS_SAVINGS_PLANS = "AWS Savings Plans";
ServiceNames.AWS_SECRETS_MANAGER = "AWS Secrets Manager";
ServiceNames.AWS_SECURITY_HUB = "AWS Security Hub";
ServiceNames.AWS_SECURITY_TOKEN_SERVICE = "AWS Security Token Service";
ServiceNames.AWS_SERVER_MIGRATION_SERVICE = "AWS Server Migration Service";
ServiceNames.AWS_SERVERLESS_APPLICATION_REPOSITORY = "AWS Serverless Application Repository";
ServiceNames.AWS_SERVICE_CATALOG = "AWS Service Catalog";
ServiceNames.SERVICE_QUOTAS = "Service Quotas";
ServiceNames.AMAZON_SES = "Amazon SES";
ServiceNames.AMAZON_SESSION_MANAGER_MESSAGE_GATEWAY_SERVICE = "Amazon Session Manager Message Gateway Service";
ServiceNames.AWS_SHIELD = "AWS Shield";
ServiceNames.AMAZON_SIMPLE_WORKFLOW_SERVICE = "Amazon Simple Workflow Service";
ServiceNames.AMAZON_SIMPLE_DB = "Amazon SimpleDB";
ServiceNames.AWS_SNOWBALL = "AWS Snowball";
ServiceNames.AMAZON_SNS = "Amazon SNS";
ServiceNames.AMAZON_SQS = "Amazon SQS";
ServiceNames.AWS_SSO = "AWS SSO";
ServiceNames.AWS_SSO_DIRECTORY = "AWS SSO Directory";
ServiceNames.AWS_STEP_FUNCTIONS = "AWS Step Functions";
ServiceNames.AMAZON_STORAGE_GATEWAY = "Amazon Storage Gateway";
ServiceNames.AMAZON_SUMERIAN = "Amazon Sumerian";
ServiceNames.AWS_SUPPORT = "AWS Support";
ServiceNames.AWS_SYSTEMS_MANAGER = "AWS Systems Manager";
ServiceNames.AMAZON_TEXTRACT = "Amazon Textract";
ServiceNames.AMAZON_TRANSCRIBE = "Amazon Transcribe";
ServiceNames.AWS_TRANSFER_FOR_SFTP = "AWS Transfer for SFTP";
ServiceNames.AMAZON_TRANSLATE = "Amazon Translate";
ServiceNames.AWS_TRUSTED_ADVISOR = "AWS Trusted Advisor";
ServiceNames.AWS_WAF = "AWS WAF";
ServiceNames.AWS_WAF_REGIONAL = "AWS WAF Regional";
ServiceNames.AWS_WAF_V2 = "AWS WAF V2";
ServiceNames.AWS_WELL_ARCHITECTED_TOOL = "AWS Well-Architected Tool";
ServiceNames.AMAZON_WORK_DOCS = "Amazon WorkDocs";
ServiceNames.AMAZON_WORK_LINK = "Amazon WorkLink";
ServiceNames.AMAZON_WORK_MAIL = "Amazon WorkMail";
ServiceNames.AMAZON_WORK_MAIL_MESSAGE_FLOW = "Amazon WorkMail Message Flow";
ServiceNames.AMAZON_WORK_SPACES = "Amazon WorkSpaces";
ServiceNames.AMAZON_WORK_SPACES_APPLICATION_MANAGER = "Amazon WorkSpaces Application Manager";
ServiceNames.AWS_X_RAY = "AWS X-Ray";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXJ2aWNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsZ0VBQWdFOztBQUVoRSxNQUFhLFlBQVk7O0FBQXpCLG9DQTROQztBQTNOMEIseUJBQVksR0FBRyxjQUFjLENBQUE7QUFDN0IsK0JBQWtCLEdBQUcsb0JBQW9CLENBQUE7QUFDekMsd0JBQVcsR0FBRyxhQUFhLENBQUE7QUFDM0IsK0JBQWtCLEdBQUcsb0JBQW9CLENBQUE7QUFDekMseUJBQVksR0FBRyxjQUFjLENBQUE7QUFDN0IsaUNBQW9CLEdBQUcsc0JBQXNCLENBQUE7QUFDN0MscUNBQXdCLEdBQUcsMEJBQTBCLENBQUE7QUFDckQsa0NBQXFCLEdBQUcsdUJBQXVCLENBQUE7QUFDL0MsMENBQTZCLEdBQUcsK0JBQStCLENBQUE7QUFDL0Qsa0NBQXFCLEdBQUcsc0JBQXNCLENBQUE7QUFDOUMseUJBQVksR0FBRyxhQUFhLENBQUE7QUFDNUIseUJBQVksR0FBRyxjQUFjLENBQUE7QUFDN0IsMEJBQWEsR0FBRyxlQUFlLENBQUE7QUFDL0IsNkJBQWdCLEdBQUcsa0JBQWtCLENBQUE7QUFDckMsdUJBQVUsR0FBRyxZQUFZLENBQUE7QUFDekIsK0JBQWtCLEdBQUcsb0JBQW9CLENBQUE7QUFDekMsc0JBQVMsR0FBRyxXQUFXLENBQUE7QUFDdkIsd0JBQVcsR0FBRyxhQUFhLENBQUE7QUFDM0IsK0JBQWtCLEdBQUcsb0JBQW9CLENBQUE7QUFDekMsb0NBQXVCLEdBQUcseUJBQXlCLENBQUE7QUFDbkQsa0VBQXFELEdBQUcsdURBQXVELENBQUE7QUFDL0csd0JBQVcsR0FBRyxhQUFhLENBQUE7QUFDM0IseUJBQVksR0FBRyxjQUFjLENBQUE7QUFDN0IsbUNBQXNCLEdBQUcsd0JBQXdCLENBQUE7QUFDakQsMEJBQWEsR0FBRyxlQUFlLENBQUE7QUFDL0Isd0JBQVcsR0FBRyxZQUFZLENBQUE7QUFDMUIsZ0NBQW1CLEdB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QUFZLENBQUE7QUFDekIsc0NBQXlCLEdBQUcsMkJBQTJCLENBQUE7QUFDdkQsNkJBQWdCLEdBQUcsaUJBQWlCLENBQUE7QUFDcEMsNkJBQWdCLEdBQUcsaUJBQWlCLENBQUE7QUFDcEMsNkJBQWdCLEdBQUcsaUJBQWlCLENBQUE7QUFDcEMsMENBQTZCLEdBQUcsOEJBQThCLENBQUE7QUFDOUQsK0JBQWtCLEdBQUcsbUJBQW1CLENBQUE7QUFDeEMsbURBQXNDLEdBQUcsdUNBQXVDLENBQUE7QUFDaEYsc0JBQVMsR0FBRyxXQUFXLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOT1RFOiBUSElTIElTIE1BQ0hJTkUgR0VORVJBVEVELiBDSEFOR0VTIFdJTEwgQkUgT1ZFUldSSVRURU4hXG5cbmV4cG9ydCBjbGFzcyBTZXJ2aWNlTmFtZXMge1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0FDQ09VTlRTID0gXCJBV1MgQWNjb3VudHNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQUxFWEFfRk9SX0JVU0lORVNTID0gXCJBbGV4YSBmb3IgQnVzaW5lc3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0FNUExJRlkgPSBcIkFXUyBBbXBsaWZ5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9BUElfR0FURVdBWSA9IFwiQW1hem9uIEFQSSBHYXRld2F5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19BUFBfTUVTSCA9IFwiQVdTIEFwcCBNZXNoXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19BUFBfTUVTSF9QUkVWSUVXID0gXCJBV1MgQXBwIE1lc2ggUHJldmlld1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBUFBMSUNBVElPTl9BVVRPX1NDQUxJTkcgPSBcIkFwcGxpY2F0aW9uIEF1dG8gU2NhbGluZ1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBUFBMSUNBVElPTl9ESVNDT1ZFUlkgPSBcIkFwcGxpY2F0aW9uIERpc2NvdmVyeVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBUFBMSUNBVElPTl9ESVNDT1ZFUllfQVJTRU5BTCA9IFwiQXBwbGljYXRpb24gRGlzY292ZXJ5IEFyc2VuYWxcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0FQUF9TVFJFQU1fMl8wID0gXCJBbWF6b24gQXBwU3RyZWFtIDIuMFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQVBQX1NZTkMgPSBcIkFXUyBBcHBTeW5jXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19BUlRJRkFDVCA9IFwiQVdTIEFydGlmYWN0XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9BVEhFTkEgPSBcIkFtYXpvbiBBdGhlbmFcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0FVVE9fU0NBTElORyA9IFwiQVdTIEF1dG8gU2NhbGluZ1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQkFDS1VQID0gXCJBV1MgQmFja3VwXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19CQUNLVVBfU1RPUkFHRSA9IFwiQVdTIEJhY2t1cCBzdG9yYWdlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19CQVRDSCA9IFwiQVdTIEJhdGNoXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19CSUxMSU5HID0gXCJBV1MgQmlsbGluZ1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQlVER0VUX1NFUlZJQ0UgPSBcIkFXUyBCdWRnZXQgU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQ0VSVElGSUNBVEVfTUFOQUdFUiA9IFwiQVdTIENlcnRpZmljYXRlIE1hbmFnZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NFUlRJRklDQVRFX01BTkFHRVJfUFJJVkFURV9DRVJUSUZJQ0FURV9BVVRIT1JJVFkgPSBcIkFXUyBDZXJ0aWZpY2F0ZSBNYW5hZ2VyIFByaXZhdGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19DSEFUQk9UID0gXCJBV1MgQ2hhdGJvdFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fQ0hJTUUgPSBcIkFtYXpvbiBDaGltZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fQ0xPVURfRElSRUNUT1JZID0gXCJBbWF6b24gQ2xvdWQgRGlyZWN0b3J5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19DTE9VRF9NQVAgPSBcIkFXUyBDbG91ZCBNYXBcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NMT1VEXzkgPSBcIkFXUyBDbG91ZDlcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NMT1VEX0ZPUk1BVElPTiA9IFwiQVdTIENsb3VkRm9ybWF0aW9uXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9DTE9VRF9GUk9OVCA9IFwiQW1hem9uIENsb3VkRnJvbnRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NMT1VEX0hTTSA9IFwiQVdTIENsb3VkSFNNXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9DTE9VRF9TRUFSQ0ggPSBcIkFtYXpvbiBDbG91ZFNlYXJjaFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQ0xPVURfVFJBSUwgPSBcIkFXUyBDbG91ZFRyYWlsXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9DTE9VRF9XQVRDSCA9IFwiQW1hem9uIENsb3VkV2F0Y2hcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQ0xPVURfV0FUQ0hfQVBQTElDQVRJT05fSU5TSUdIVFMgPSBcIkNsb3VkV2F0Y2ggQXBwbGljYXRpb24gSW5zaWdodHNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0NMT1VEX1dBVENIX0xPR1MgPSBcIkFtYXpvbiBDbG91ZFdhdGNoIExvZ3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0NMT1VEX1dBVENIX1NZTlRIRVRJQ1MgPSBcIkFtYXpvbiBDbG91ZFdhdGNoIFN5bnRoZXRpY3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NPREVfU0lHTklOR19GT1JfQU1BWk9OX0ZSRUVfUlRPUyA9IFwiQVdTIENvZGUgU2lnbmluZyBmb3IgQW1hem9uIEZyZWVSVE9TXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19DT0RFX0JVSUxEID0gXCJBV1MgQ29kZUJ1aWxkXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19DT0RFX0NPTU1JVCA9IFwiQVdTIENvZGVDb21taXRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NPREVfREVQTE9ZID0gXCJBV1MgQ29kZURlcGxveVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQ09ERV9QSVBFTElORSA9IFwiQVdTIENvZGVQaXBlbGluZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQ09ERV9TVEFSID0gXCJBV1MgQ29kZVN0YXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NPREVfU1RBUl9OT1RJRklDQVRJT05TID0gXCJBV1MgQ29kZVN0YXIgTm90aWZpY2F0aW9uc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fQ09HTklUT19JREVOVElUWSA9IFwiQW1hem9uIENvZ25pdG8gSWRlbnRpdHlcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0NPR05JVE9fU1lOQyA9IFwiQW1hem9uIENvZ25pdG8gU3luY1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fQ09HTklUT19VU0VSX1BPT0xTID0gXCJBbWF6b24gQ29nbml0byBVc2VyIFBvb2xzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9DT01QUkVIRU5EID0gXCJBbWF6b24gQ29tcHJlaGVuZFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBDT01QUkVIRU5EX01FRElDQUwgPSBcIkNvbXByZWhlbmQgTWVkaWNhbFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBDT01QVVRFX09QVElNSVpFUiA9IFwiQ29tcHV0ZSBPcHRpbWl6ZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NPTkZJRyA9IFwiQVdTIENvbmZpZ1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fQ09OTkVDVCA9IFwiQW1hem9uIENvbm5lY3RcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0NPU1RfQU5EX1VTQUdFX1JFUE9SVCA9IFwiQVdTIENvc3QgYW5kIFVzYWdlIFJlcG9ydFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfQ09TVF9FWFBMT1JFUl9TRVJWSUNFID0gXCJBV1MgQ29zdCBFeHBsb3JlciBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19EQVRBX0VYQ0hBTkdFID0gXCJBV1MgRGF0YSBFeGNoYW5nZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fREFUQV9MSUZFQ1lDTEVfTUFOQUdFUiA9IFwiQW1hem9uIERhdGEgTGlmZWN5Y2xlIE1hbmFnZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgREFUQV9QSVBFTElORSA9IFwiRGF0YSBQaXBlbGluZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfREFUQUJBU0VfTUlHUkFUSU9OX1NFUlZJQ0UgPSBcIkFXUyBEYXRhYmFzZSBNaWdyYXRpb24gU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBEQVRBQkFTRV9RVUVSWV9NRVRBREFUQV9TRVJWSUNFID0gXCJEYXRhYmFzZSBRdWVyeSBNZXRhZGF0YSBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IERBVEFfU1lOQyA9IFwiRGF0YVN5bmNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0RFRVBfTEVOUyA9IFwiQVdTIERlZXBMZW5zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19ERUVQX1JBQ0VSID0gXCJBV1MgRGVlcFJhY2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9ERVRFQ1RJVkUgPSBcIkFtYXpvbiBEZXRlY3RpdmVcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0RFVklDRV9GQVJNID0gXCJBV1MgRGV2aWNlIEZhcm1cIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0RJUkVDVF9DT05ORUNUID0gXCJBV1MgRGlyZWN0IENvbm5lY3RcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0RJUkVDVE9SWV9TRVJWSUNFID0gXCJBV1MgRGlyZWN0b3J5IFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0RZTkFNT19EQiA9IFwiQW1hem9uIER5bmFtb0RCXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9EWU5BTU9fREJfQUNDRUxFUkFUT1JfREFYID0gXCJBbWF6b24gRHluYW1vREIgQWNjZWxlcmF0b3IgKERBWClcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VDMiA9IFwiQW1hem9uIEVDMlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fRUMyX0FVVE9fU0NBTElORyA9IFwiQW1hem9uIEVDMiBBdXRvIFNjYWxpbmdcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VDMl9JTUFHRV9CVUlMREVSID0gXCJBbWF6b24gRUMyIEltYWdlIEJ1aWxkZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VDMl9JTlNUQU5DRV9DT05ORUNUID0gXCJBbWF6b24gRUMyIEluc3RhbmNlIENvbm5lY3RcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0VMQVNUSUNfQkVBTlNUQUxLID0gXCJBV1MgRWxhc3RpYyBCZWFuc3RhbGtcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VMQVNUSUNfQkxPQ0tfU1RPUkUgPSBcIkFtYXpvbiBFbGFzdGljIEJsb2NrIFN0b3JlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9FTEFTVElDX0NPTlRBSU5FUl9SRUdJU1RSWSA9IFwiQW1hem9uIEVsYXN0aWMgQ29udGFpbmVyIFJlZ2lzdHJ5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9FTEFTVElDX0NPTlRBSU5FUl9TRVJWSUNFID0gXCJBbWF6b24gRWxhc3RpYyBDb250YWluZXIgU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fRUxBU1RJQ19DT05UQUlORVJfU0VSVklDRV9GT1JfS1VCRVJORVRFUyA9IFwiQW1hem9uIEVsYXN0aWMgQ29udGFpbmVyIFNlcnZpY2UgZm9yIEt1YmVybmV0ZXNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VMQVNUSUNfRklMRV9TWVNURU0gPSBcIkFtYXpvbiBFbGFzdGljIEZpbGUgU3lzdGVtXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9FTEFTVElDX0lORkVSRU5DRSA9IFwiQW1hem9uIEVsYXN0aWMgSW5mZXJlbmNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEVMQVNUSUNfTE9BRF9CQUxBTkNJTkcgPSBcIkVsYXN0aWMgTG9hZCBCYWxhbmNpbmdcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRUxBU1RJQ19MT0FEX0JBTEFOQ0lOR19WMiA9IFwiRWxhc3RpYyBMb2FkIEJhbGFuY2luZyBWMlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fRUxBU1RJQ19NQVBfUkVEVUNFID0gXCJBbWF6b24gRWxhc3RpYyBNYXBSZWR1Y2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VMQVNUSUNfVFJBTlNDT0RFUiA9IFwiQW1hem9uIEVsYXN0aWMgVHJhbnNjb2RlclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fRUxBU1RJX0NBQ0hFID0gXCJBbWF6b24gRWxhc3RpQ2FjaGVcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VMQVNUSUNTRUFSQ0hfU0VSVklDRSA9IFwiQW1hem9uIEVsYXN0aWNzZWFyY2ggU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfRUxFTUVOVEFMX01FRElBX0NPTk5FQ1QgPSBcIkFXUyBFbGVtZW50YWwgTWVkaWFDb25uZWN0XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19FTEVNRU5UQUxfTUVESUFfQ09OVkVSVCA9IFwiQVdTIEVsZW1lbnRhbCBNZWRpYUNvbnZlcnRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0VMRU1FTlRBTF9NRURJQV9MSVZFID0gXCJBV1MgRWxlbWVudGFsIE1lZGlhTGl2ZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfRUxFTUVOVEFMX01FRElBX1BBQ0tBR0UgPSBcIkFXUyBFbGVtZW50YWwgTWVkaWFQYWNrYWdlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19FTEVNRU5UQUxfTUVESUFfUEFDS0FHRV9WT0QgPSBcIkFXUyBFbGVtZW50YWwgTWVkaWFQYWNrYWdlIFZPRFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfRUxFTUVOVEFMX01FRElBX1NUT1JFID0gXCJBV1MgRWxlbWVudGFsIE1lZGlhU3RvcmVcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0VMRU1FTlRBTF9NRURJQV9UQUlMT1IgPSBcIkFXUyBFbGVtZW50YWwgTWVkaWFUYWlsb3JcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0VWRU5UX0JSSURHRSA9IFwiQW1hem9uIEV2ZW50QnJpZGdlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9FVkVOVF9CUklER0VfU0NIRU1BUyA9IFwiQW1hem9uIEV2ZW50QnJpZGdlIFNjaGVtYXNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0ZJUkVXQUxMX01BTkFHRVIgPSBcIkFXUyBGaXJld2FsbCBNYW5hZ2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9GT1JFQ0FTVCA9IFwiQW1hem9uIEZvcmVjYXN0XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9GUkFVRF9ERVRFQ1RPUiA9IFwiQW1hem9uIEZyYXVkIERldGVjdG9yXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9GUkVFX1JUT1MgPSBcIkFtYXpvbiBGcmVlUlRPU1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fRlNYID0gXCJBbWF6b24gRlN4XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9HQU1FX0xJRlQgPSBcIkFtYXpvbiBHYW1lTGlmdFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fR0xBQ0lFUiA9IFwiQW1hem9uIEdsYWNpZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0dMT0JBTF9BQ0NFTEVSQVRPUiA9IFwiQVdTIEdsb2JhbCBBY2NlbGVyYXRvclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfR0xVRSA9IFwiQVdTIEdsdWVcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0dST1VORF9TVEFUSU9OID0gXCJBV1MgR3JvdW5kIFN0YXRpb25cIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0dST1VORF9UUlVUSF9MQUJFTElORyA9IFwiQW1hem9uIEdyb3VuZFRydXRoIExhYmVsaW5nXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9HVUFSRF9EVVRZID0gXCJBbWF6b24gR3VhcmREdXR5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19IRUFMVEhfQVBJU19BTkRfTk9USUZJQ0FUSU9OUyA9IFwiQVdTIEhlYWx0aCBBUElzIGFuZCBOb3RpZmljYXRpb25zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IElBTV9BQ0NFU1NfQU5BTFlaRVIgPSBcIklBTSBBY2Nlc3MgQW5hbHl6ZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgSURFTlRJVFlfQU5EX0FDQ0VTU19NQU5BR0VNRU5UID0gXCJJZGVudGl0eSBBbmQgQWNjZXNzIE1hbmFnZW1lbnRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0lNUE9SVF9FWFBPUlRfRElTS19TRVJWSUNFID0gXCJBV1MgSW1wb3J0IEV4cG9ydCBEaXNrIFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0lOU1BFQ1RPUiA9IFwiQW1hem9uIEluc3BlY3RvclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfSU9UID0gXCJBV1MgSW9UXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19JT1RfMV9DTElDSyA9IFwiQVdTIElvVCAxLUNsaWNrXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19JT1RfQU5BTFlUSUNTID0gXCJBV1MgSW9UIEFuYWx5dGljc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfSU9UX0VWRU5UUyA9IFwiQVdTIElvVCBFdmVudHNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0lPVF9HUkVFTkdSQVNTID0gXCJBV1MgSW9UIEdyZWVuZ3Jhc3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0lPVF9TSVRFX1dJU0UgPSBcIkFXUyBJb1QgU2l0ZVdpc2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0lPVF9USElOR1NfR1JBUEggPSBcIkFXUyBJb1QgVGhpbmdzIEdyYXBoXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19JUSA9IFwiQVdTIElRXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19JUV9QRVJNSVNTSU9OUyA9IFwiQVdTIElRIFBlcm1pc3Npb25zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9LRU5EUkEgPSBcIkFtYXpvbiBLZW5kcmFcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX0tFWV9NQU5BR0VNRU5UX1NFUlZJQ0UgPSBcIkFXUyBLZXkgTWFuYWdlbWVudCBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9LSU5FU0lTID0gXCJBbWF6b24gS2luZXNpc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fS0lORVNJU19BTkFMWVRJQ1MgPSBcIkFtYXpvbiBLaW5lc2lzIEFuYWx5dGljc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fS0lORVNJU19BTkFMWVRJQ1NfVjIgPSBcIkFtYXpvbiBLaW5lc2lzIEFuYWx5dGljcyBWMlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fS0lORVNJU19GSVJFSE9TRSA9IFwiQW1hem9uIEtpbmVzaXMgRmlyZWhvc2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0tJTkVTSVNfVklERU9fU1RSRUFNUyA9IFwiQW1hem9uIEtpbmVzaXMgVmlkZW8gU3RyZWFtc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfTEFLRV9GT1JNQVRJT04gPSBcIkFXUyBMYWtlIEZvcm1hdGlvblwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfTEFNQkRBID0gXCJBV1MgTGFtYmRhXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IExBVU5DSF9XSVpBUkQgPSBcIkxhdW5jaCBXaXphcmRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX0xFWCA9IFwiQW1hem9uIExleFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfTElDRU5TRV9NQU5BR0VSID0gXCJBV1MgTGljZW5zZSBNYW5hZ2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9MSUdIVFNBSUwgPSBcIkFtYXpvbiBMaWdodHNhaWxcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX01BQ0hJTkVfTEVBUk5JTkcgPSBcIkFtYXpvbiBNYWNoaW5lIExlYXJuaW5nXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9NQUNJRSA9IFwiQW1hem9uIE1hY2llXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1BTkFHRV9BTUFaT05fQVBJX0dBVEVXQVkgPSBcIk1hbmFnZSBBbWF6b24gQVBJIEdhdGV3YXlcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX01BTkFHRURfQVBBQ0hFX0NBU1NBTkRSQV9TRVJWSUNFID0gXCJBV1MgTWFuYWdlZCBBcGFjaGUgQ2Fzc2FuZHJhIFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX01BTkFHRURfQkxPQ0tDSEFJTiA9IFwiQW1hem9uIE1hbmFnZWQgQmxvY2tjaGFpblwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fTUFOQUdFRF9TVFJFQU1JTkdfRk9SX0tBRktBID0gXCJBbWF6b24gTWFuYWdlZCBTdHJlYW1pbmcgZm9yIEthZmthXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19NQVJLRVRQTEFDRSA9IFwiQVdTIE1hcmtldHBsYWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19NQVJLRVRQTEFDRV9DQVRBTE9HID0gXCJBV1MgTWFya2V0cGxhY2UgQ2F0YWxvZ1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfTUFSS0VUUExBQ0VfRU5USVRMRU1FTlRfU0VSVklDRSA9IFwiQVdTIE1hcmtldHBsYWNlIEVudGl0bGVtZW50IFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX01BUktFVFBMQUNFX0lNQUdFX0JVSUxESU5HX1NFUlZJQ0UgPSBcIkFXUyBNYXJrZXRwbGFjZSBJbWFnZSBCdWlsZGluZyBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19NQVJLRVRQTEFDRV9NQU5BR0VNRU5UX1BPUlRBTCA9IFwiQVdTIE1hcmtldHBsYWNlIE1hbmFnZW1lbnQgUG9ydGFsXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19NQVJLRVRQTEFDRV9NRVRFUklOR19TRVJWSUNFID0gXCJBV1MgTWFya2V0cGxhY2UgTWV0ZXJpbmcgU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfTUFSS0VUUExBQ0VfUFJPQ1VSRU1FTlRfU1lTVEVNU19JTlRFR1JBVElPTiA9IFwiQVdTIE1hcmtldHBsYWNlIFByb2N1cmVtZW50IFN5c3RlbXMgSW50ZWdyYXRpb25cIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX01FQ0hBTklDQUxfVFVSSyA9IFwiQW1hem9uIE1lY2hhbmljYWwgVHVya1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fTUVTU0FHRV9ERUxJVkVSWV9TRVJWSUNFID0gXCJBbWF6b24gTWVzc2FnZSBEZWxpdmVyeSBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19NSUdSQVRJT05fSFVCID0gXCJBV1MgTWlncmF0aW9uIEh1YlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fTU9CSUxFX0FOQUxZVElDUyA9IFwiQW1hem9uIE1vYmlsZSBBbmFseXRpY3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX01PQklMRV9IVUIgPSBcIkFXUyBNb2JpbGUgSHViXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9NUSA9IFwiQW1hem9uIE1RXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9ORVBUVU5FID0gXCJBbWF6b24gTmVwdHVuZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBORVRXT1JLX01BTkFHRVIgPSBcIk5ldHdvcmsgTWFuYWdlclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfT1BTX1dPUktTID0gXCJBV1MgT3BzV29ya3NcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX09QU19XT1JLU19DT05GSUdVUkFUSU9OX01BTkFHRU1FTlQgPSBcIkFXUyBPcHNXb3JrcyBDb25maWd1cmF0aW9uIE1hbmFnZW1lbnRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX09SR0FOSVpBVElPTlMgPSBcIkFXUyBPcmdhbml6YXRpb25zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19PVVRQT1NUUyA9IFwiQVdTIE91dHBvc3RzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19QRVJGT1JNQU5DRV9JTlNJR0hUUyA9IFwiQVdTIFBlcmZvcm1hbmNlIEluc2lnaHRzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9QRVJTT05BTElaRSA9IFwiQW1hem9uIFBlcnNvbmFsaXplXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9QSU5QT0lOVCA9IFwiQW1hem9uIFBpbnBvaW50XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9QSU5QT0lOVF9FTUFJTF9TRVJWSUNFID0gXCJBbWF6b24gUGlucG9pbnQgRW1haWwgU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fUElOUE9JTlRfU01TX0FORF9WT0lDRV9TRVJWSUNFID0gXCJBbWF6b24gUGlucG9pbnQgU01TIGFuZCBWb2ljZSBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9QT0xMWSA9IFwiQW1hem9uIFBvbGx5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19QUklDRV9MSVNUID0gXCJBV1MgUHJpY2UgTGlzdFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfUFJJVkFURV9NQVJLRVRQTEFDRSA9IFwiQVdTIFByaXZhdGUgTWFya2V0cGxhY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1FMREIgPSBcIkFtYXpvbiBRTERCXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9RVUlDS19TSUdIVCA9IFwiQW1hem9uIFF1aWNrU2lnaHRcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1JEUyA9IFwiQW1hem9uIFJEU1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fUkRTX0RBVEFfQVBJID0gXCJBbWF6b24gUkRTIERhdGEgQVBJXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9SRFNfSUFNX0FVVEhFTlRJQ0FUSU9OID0gXCJBbWF6b24gUkRTIElBTSBBdXRoZW50aWNhdGlvblwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fUkVEU0hJRlQgPSBcIkFtYXpvbiBSZWRzaGlmdFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fUkVLT0dOSVRJT04gPSBcIkFtYXpvbiBSZWtvZ25pdGlvblwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfUkVTT1VSQ0VfQUNDRVNTX01BTkFHRVIgPSBcIkFXUyBSZXNvdXJjZSBBY2Nlc3MgTWFuYWdlclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fUkVTT1VSQ0VfR1JPVVBfVEFHR0lOR19BUEkgPSBcIkFtYXpvbiBSZXNvdXJjZSBHcm91cCBUYWdnaW5nIEFQSVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfUkVTT1VSQ0VfR1JPVVBTID0gXCJBV1MgUmVzb3VyY2UgR3JvdXBzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19ST0JPX01BS0VSID0gXCJBV1MgUm9ib01ha2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9ST1VURV81MyA9IFwiQW1hem9uIFJvdXRlIDUzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9ST1VURV81M19SRVNPTFZFUiA9IFwiQW1hem9uIFJvdXRlIDUzIFJlc29sdmVyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9ST1VURV81M19ET01BSU5TID0gXCJBbWF6b24gUm91dGU1MyBEb21haW5zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9TMyA9IFwiQW1hem9uIFMzXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9TQUdFX01BS0VSID0gXCJBbWF6b24gU2FnZU1ha2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TQVZJTkdTX1BMQU5TID0gXCJBV1MgU2F2aW5ncyBQbGFuc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfU0VDUkVUU19NQU5BR0VSID0gXCJBV1MgU2VjcmV0cyBNYW5hZ2VyXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TRUNVUklUWV9IVUIgPSBcIkFXUyBTZWN1cml0eSBIdWJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NFQ1VSSVRZX1RPS0VOX1NFUlZJQ0UgPSBcIkFXUyBTZWN1cml0eSBUb2tlbiBTZXJ2aWNlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TRVJWRVJfTUlHUkFUSU9OX1NFUlZJQ0UgPSBcIkFXUyBTZXJ2ZXIgTWlncmF0aW9uIFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NFUlZFUkxFU1NfQVBQTElDQVRJT05fUkVQT1NJVE9SWSA9IFwiQVdTIFNlcnZlcmxlc3MgQXBwbGljYXRpb24gUmVwb3NpdG9yeVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfU0VSVklDRV9DQVRBTE9HID0gXCJBV1MgU2VydmljZSBDYXRhbG9nXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFNFUlZJQ0VfUVVPVEFTID0gXCJTZXJ2aWNlIFF1b3Rhc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fU0VTID0gXCJBbWF6b24gU0VTXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9TRVNTSU9OX01BTkFHRVJfTUVTU0FHRV9HQVRFV0FZX1NFUlZJQ0UgPSBcIkFtYXpvbiBTZXNzaW9uIE1hbmFnZXIgTWVzc2FnZSBHYXRld2F5IFNlcnZpY2VcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NISUVMRCA9IFwiQVdTIFNoaWVsZFwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fU0lNUExFX1dPUktGTE9XX1NFUlZJQ0UgPSBcIkFtYXpvbiBTaW1wbGUgV29ya2Zsb3cgU2VydmljZVwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fU0lNUExFX0RCID0gXCJBbWF6b24gU2ltcGxlREJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NOT1dCQUxMID0gXCJBV1MgU25vd2JhbGxcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1NOUyA9IFwiQW1hem9uIFNOU1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fU1FTID0gXCJBbWF6b24gU1FTXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TU08gPSBcIkFXUyBTU09cIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NTT19ESVJFQ1RPUlkgPSBcIkFXUyBTU08gRGlyZWN0b3J5XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TVEVQX0ZVTkNUSU9OUyA9IFwiQVdTIFN0ZXAgRnVuY3Rpb25zXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9TVE9SQUdFX0dBVEVXQVkgPSBcIkFtYXpvbiBTdG9yYWdlIEdhdGV3YXlcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1NVTUVSSUFOID0gXCJBbWF6b24gU3VtZXJpYW5cIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1NVUFBPUlQgPSBcIkFXUyBTdXBwb3J0XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19TWVNURU1TX01BTkFHRVIgPSBcIkFXUyBTeXN0ZW1zIE1hbmFnZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1RFWFRSQUNUID0gXCJBbWF6b24gVGV4dHJhY3RcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1RSQU5TQ1JJQkUgPSBcIkFtYXpvbiBUcmFuc2NyaWJlXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19UUkFOU0ZFUl9GT1JfU0ZUUCA9IFwiQVdTIFRyYW5zZmVyIGZvciBTRlRQXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9UUkFOU0xBVEUgPSBcIkFtYXpvbiBUcmFuc2xhdGVcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1RSVVNURURfQURWSVNPUiA9IFwiQVdTIFRydXN0ZWQgQWR2aXNvclwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfV0FGID0gXCJBV1MgV0FGXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFXU19XQUZfUkVHSU9OQUwgPSBcIkFXUyBXQUYgUmVnaW9uYWxcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1dBRl9WMiA9IFwiQVdTIFdBRiBWMlwiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBV1NfV0VMTF9BUkNISVRFQ1RFRF9UT09MID0gXCJBV1MgV2VsbC1BcmNoaXRlY3RlZCBUb29sXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9XT1JLX0RPQ1MgPSBcIkFtYXpvbiBXb3JrRG9jc1wiXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBTUFaT05fV09SS19MSU5LID0gXCJBbWF6b24gV29ya0xpbmtcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1dPUktfTUFJTCA9IFwiQW1hem9uIFdvcmtNYWlsXCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9XT1JLX01BSUxfTUVTU0FHRV9GTE9XID0gXCJBbWF6b24gV29ya01haWwgTWVzc2FnZSBGbG93XCJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFNQVpPTl9XT1JLX1NQQUNFUyA9IFwiQW1hem9uIFdvcmtTcGFjZXNcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQU1BWk9OX1dPUktfU1BBQ0VTX0FQUExJQ0FUSU9OX01BTkFHRVIgPSBcIkFtYXpvbiBXb3JrU3BhY2VzIEFwcGxpY2F0aW9uIE1hbmFnZXJcIlxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQVdTX1hfUkFZID0gXCJBV1MgWC1SYXlcIlxufSJdfQ==